library(xlsx)
library(openxlsx)
write.xlsx(here("Documents/Documents - Nuff-Malham/GitHub/transition_abm/data/agnostic_occ_sim_matrix.xlsx"))
getwd()
write.xlsx(here("agnostic_occ_sim_matrix.xlsx"))
library(tidyverse)
library(readxl)
library(here)
library(openxlsx)
temp <- read_xlsx(here("Documents/Documents - Nuff-Malham/GitHub/transition_abm/data/Related Occupations.xlsx")) %>%
rename(soc_code = 1, related_soc_code = 3, index = Index) %>%
select(soc_code, related_soc_code, index)
# Orhtoptists and Meter Readers, Utilities are the two occupations that are not listed as "related" to other occupations
temp %>% pull(soc_code) %>% unique %>% setdiff(unique(temp$related_soc_code))
# SOC Code from 8-digit to 6-digit (same as excluding the last two values of the soc code)
# https://www.onetcenter.org/crosswalks.html
# test to see whether 6-digit and 8-digit soc codes are the same
read_xlsx(here("Documents/Documents - Nuff-Malham/GitHub/transition_abm/data/2019_to_SOC_Crosswalk.xlsx"), skip = 2) %>%
rename(soc_code_8 = 1, soc_code_6 = 3)  %>%
select(1,3) %>%
mutate(soc_code_8 = substr(soc_code_8,1,7),
test = identical(soc_code_8, soc_code_6)) %>%
filter(!test) %>% nrow(.) == 0
# https://www.bls.gov/emp/documentation/crosswalks.htm
soc_acs <- read_xlsx(here("Documents/Documents - Nuff-Malham/GitHub/transition_abm/data/nem-occcode-acs-crosswalk.xlsx"), skip = 4) %>%
rename(soc_code_6 = 2, acs_code = 4) %>%
select(2,4)
empir_trans_probs <- temp %>%
mutate(across(c(soc_code, related_soc_code), ~substr(., 1,7))) %>%
left_join(., soc_acs, join_by(soc_code == soc_code_6)) %>%
left_join(., soc_acs, join_by(related_soc_code == soc_code_6)) %>%
rename(acs_code = acs_code.x, related_acs_code = acs_code.y) %>%
group_by(acs_code, related_acs_code) %>%
summarise(index = mean(index, na.rm = TRUE)) %>%
group_by(acs_code) %>%
mutate(nor_index = 1 - (index/max(index))) %>%
pivot_wider(id_cols = acs_code, names_from = related_acs_code, values_from = nor_index, values_fill = 0)
temp <- read_xlsx(here("Documents/Documents - Nuff-Malham/GitHub/transition_abm/data/Related Occupations.xlsx")) %>%
rename(soc_code = 1, related_soc_code = 3, index = Index) %>%
select(soc_code, related_soc_code, index)
temp <- read_xlsx(here("data/Related Occupations.xlsx")) %>%
rename(soc_code = 1, related_soc_code = 3, index = Index) %>%
select(soc_code, related_soc_code, index)
temp <- read_xlsx(here("../data/Related Occupations.xlsx")) %>%
rename(soc_code = 1, related_soc_code = 3, index = Index) %>%
select(soc_code, related_soc_code, index)
# Orhtoptists and Meter Readers, Utilities are the two occupations that are not listed as "related" to other occupations
temp %>% pull(soc_code) %>% unique %>% setdiff(unique(temp$related_soc_code))
temp <- read_xlsx(here("../data/Related Occupations.xlsx")) %>%
rename(soc_code = 1, related_soc_code = 3, index = Index) %>%
select(soc_code, related_soc_code, index)
# Orhtoptists and Meter Readers, Utilities are the two occupations that are not listed as "related" to other occupations
temp %>% pull(soc_code) %>% unique %>% setdiff(unique(temp$related_soc_code))
# SOC Code from 8-digit to 6-digit (same as excluding the last two values of the soc code)
# https://www.onetcenter.org/crosswalks.html
# test to see whether 6-digit and 8-digit soc codes are the same
read_xlsx(here("../data/2019_to_SOC_Crosswalk.xlsx"), skip = 2) %>%
rename(soc_code_8 = 1, soc_code_6 = 3)  %>%
select(1,3) %>%
mutate(soc_code_8 = substr(soc_code_8,1,7),
test = identical(soc_code_8, soc_code_6)) %>%
filter(!test) %>% nrow(.) == 0
# https://www.bls.gov/emp/documentation/crosswalks.htm
soc_acs <- read_xlsx(here("../data/nem-occcode-acs-crosswalk.xlsx"), skip = 4) %>%
rename(soc_code_6 = 2, acs_code = 4) %>%
select(2,4)
empir_trans_probs <- temp %>%
mutate(across(c(soc_code, related_soc_code), ~substr(., 1,7))) %>%
left_join(., soc_acs, join_by(soc_code == soc_code_6)) %>%
left_join(., soc_acs, join_by(related_soc_code == soc_code_6)) %>%
rename(acs_code = acs_code.x, related_acs_code = acs_code.y) %>%
group_by(acs_code, related_acs_code) %>%
summarise(index = mean(index, na.rm = TRUE)) %>%
group_by(acs_code) %>%
mutate(nor_index = 1 - (index/max(index))) %>%
pivot_wider(id_cols = acs_code, names_from = related_acs_code, values_from = nor_index, values_fill = 0)
write.xlsx(here("agnostic_occ_sim_matrix.xlsx"))
empir_trans_probs
write.xlsx(empir_trans_probs, here("agnostic_occ_sim_matrix.xlsx"))
write.xlsx(empir_trans_probs, here("../agnostic_occ_sim_matrix.xlsx"))
write.xlsx(empir_trans_probs, here("../data/agnostic_occ_sim_matrix.xlsx"))
write.xlsx(empir_trans_probs, here("../data/agnostic_occ_sim_matrix.xlsx"))
empir_trans_probs
empir_trans_probs %>% filter(is.na(acs_coe))
empir_trans_probs %>% filter(is.na(acs_code))
temp %>%
mutate(across(c(soc_code, related_soc_code), ~substr(., 1,7))) %>%
left_join(., soc_acs, join_by(soc_code == soc_code_6)) %>%
left_join(., soc_acs, join_by(related_soc_code == soc_code_6)) %>%
rename(acs_code = acs_code.x, related_acs_code = acs_code.y) %>% View()
temp %>%
mutate(across(c(soc_code, related_soc_code), ~substr(., 1,7))) %>%
left_join(., soc_acs, join_by(soc_code == soc_code_6)) %>%
left_join(., soc_acs, join_by(related_soc_code == soc_code_6)) %>%
rename(acs_code = acs_code.x, related_acs_code = acs_code.y) %>% filter(!complete.cases(.))
temp %>%
mutate(across(c(soc_code, related_soc_code), ~substr(., 1,7))) %>%
left_join(., soc_acs, join_by(soc_code == soc_code_6)) %>%
left_join(., soc_acs, join_by(related_soc_code == soc_code_6)) %>%
rename(acs_code = acs_code.x, related_acs_code = acs_code.y) %>% select(-related_acs_code) %>%  filter(!complete.cases(.))
temp %>%
mutate(across(c(soc_code, related_soc_code), ~substr(., 1,7))) %>%
left_join(., soc_acs, join_by(soc_code == soc_code_6)) %>%
left_join(., soc_acs, join_by(related_soc_code == soc_code_6)) %>%
rename(acs_code = acs_code.x, related_acs_code = acs_code.y) %>% filter(!complete.cases(.)) %>% pull(soc_code) %>% unique
library(tidyverse)
library(readxl)
library(here)
library(openxlsx)
temp <- read_xlsx(here("../data/Related Occupations.xlsx")) %>%
rename(soc_code = 1, related_soc_code = 3, index = Index) %>%
select(soc_code, related_soc_code, index)
# Orhtoptists and Meter Readers, Utilities are the two occupations that are not listed as "related" to other occupations
temp %>% pull(soc_code) %>% unique %>% setdiff(unique(temp$related_soc_code))
# SOC Code from 8-digit to 6-digit (same as excluding the last two values of the soc code)
# https://www.onetcenter.org/crosswalks.html
# test to see whether 6-digit and 8-digit soc codes are the same
read_xlsx(here("../data/2019_to_SOC_Crosswalk.xlsx"), skip = 2) %>%
rename(soc_code_8 = 1, soc_code_6 = 3)  %>%
select(1,3) %>%
mutate(soc_code_8 = substr(soc_code_8,1,7),
test = identical(soc_code_8, soc_code_6)) %>%
filter(!test) %>% nrow(.) == 0
# https://www.bls.gov/emp/documentation/crosswalks.htm
soc_acs <- read_xlsx(here("../data/nem-occcode-acs-crosswalk.xlsx"), skip = 4) %>%
rename(soc_code_6 = 2, acs_code = 4) %>%
select(2,4)
empir_trans_probs <- temp %>%
mutate(across(c(soc_code, related_soc_code), ~substr(., 1,7))) %>%
left_join(., soc_acs, join_by(soc_code == soc_code_6)) %>%
left_join(., soc_acs, join_by(related_soc_code == soc_code_6)) %>%
rename(acs_code = acs_code.x, related_acs_code = acs_code.y) %>% View()
# Occupational similarity matrix from Mealy and dRC
temp <- read_xlsx(here("../dRC_Replication/data/occupational_mobility_network.csv"))
# Occupational similarity matrix from Mealy and dRC
temp <- read.csv(here("../dRC_Replication/data/occupational_mobility_network.csv"))
# Occupational similarity matrix from Mealy and dRC
temp2 <- read.csv(here("../dRC_Replication/data/occupational_mobility_network.csv"))
temp <- read_xlsx(here("../data/Related Occupations.xlsx")) %>%
rename(soc_code = 1, related_soc_code = 3, index = Index) %>%
select(soc_code, related_soc_code, index)
# Orhtoptists and Meter Readers, Utilities are the two occupations that are not listed as "related" to other occupations
temp %>% pull(soc_code) %>% unique %>% setdiff(unique(temp$related_soc_code))
# SOC Code from 8-digit to 6-digit (same as excluding the last two values of the soc code)
# https://www.onetcenter.org/crosswalks.html
# test to see whether 6-digit and 8-digit soc codes are the same
read_xlsx(here("../data/2019_to_SOC_Crosswalk.xlsx"), skip = 2) %>%
rename(soc_code_8 = 1, soc_code_6 = 3)  %>%
select(1,3) %>%
mutate(soc_code_8 = substr(soc_code_8,1,7),
test = identical(soc_code_8, soc_code_6)) %>%
filter(!test) %>% nrow(.) == 0
# https://www.bls.gov/emp/documentation/crosswalks.htm
soc_acs <- read_xlsx(here("../data/nem-occcode-acs-crosswalk.xlsx"), skip = 4) %>%
rename(soc_code_6 = 2, acs_code = 4) %>%
select(2,4)
empir_trans_probs <- temp %>%
mutate(across(c(soc_code, related_soc_code), ~substr(., 1,7))) %>%
left_join(., soc_acs, join_by(soc_code == soc_code_6)) %>%
left_join(., soc_acs, join_by(related_soc_code == soc_code_6)) %>%
rename(acs_code = acs_code.x, related_acs_code = acs_code.y) %>% View()
empir_trans_probs %>% filter(is.na(acs_code))
# Occupational similarity matrix from Mealy and dRC
temp2 <- read.csv(here("../dRC_Replication/data/occupational_mobility_network.csv"))
temp2
%>% as.matrix
# Occupational similarity matrix from Mealy and dRC
temp2 <- read.csv(here("../dRC_Replication/data/occupational_mobility_network.csv")) %>% as.matrix
temp2
# Occupational similarity matrix from Mealy and dRC
temp2 <- read.csv(here("../dRC_Replication/data/occupational_mobility_network.csv")) %>% as.tibble
# Occupational similarity matrix from Mealy and dRC
temp2 <- read.csv(here("../dRC_Replication/data/occupational_mobility_network.csv")) %>% tibble
temp2
read.csv(here("../dRC_Replication/data/ipums_variables.csv"))
read.csv(here("../dRC_Replication/data/ipums_variables.csv")) %>%
tibble
read.csv(here("../dRC_Replication/data/ipums_variables.csv")) %>%
tibble %>%
select(acs_occ_code)
acs_codes <- read.csv(here("../dRC_Replication/data/ipums_variables.csv")) %>%
tibble %>%
select(acs_occ_code)
acs_codes
empir_trans_provs
empir_trans_probs
temp <- read_xlsx(here("../data/Related Occupations.xlsx")) %>%
rename(soc_code = 1, related_soc_code = 3, index = Index) %>%
select(soc_code, related_soc_code, index)
# Orhtoptists and Meter Readers, Utilities are the two occupations that are not listed as "related" to other occupations
temp %>% pull(soc_code) %>% unique %>% setdiff(unique(temp$related_soc_code))
# SOC Code from 8-digit to 6-digit (same as excluding the last two values of the soc code)
# https://www.onetcenter.org/crosswalks.html
# test to see whether 6-digit and 8-digit soc codes are the same
read_xlsx(here("../data/2019_to_SOC_Crosswalk.xlsx"), skip = 2) %>%
rename(soc_code_8 = 1, soc_code_6 = 3)  %>%
select(1,3) %>%
mutate(soc_code_8 = substr(soc_code_8,1,7),
test = identical(soc_code_8, soc_code_6)) %>%
filter(!test) %>% nrow(.) == 0
# https://www.bls.gov/emp/documentation/crosswalks.htm
soc_acs <- read_xlsx(here("../data/nem-occcode-acs-crosswalk.xlsx"), skip = 4) %>%
rename(soc_code_6 = 2, acs_code = 4) %>%
select(2,4)
empir_trans_probs <- temp %>%
mutate(across(c(soc_code, related_soc_code), ~substr(., 1,7))) %>%
left_join(., soc_acs, join_by(soc_code == soc_code_6)) %>%
left_join(., soc_acs, join_by(related_soc_code == soc_code_6)) %>%
rename(acs_code = acs_code.x, related_acs_code = acs_code.y)
empir_trans_probs %>% filter(is.na(acs_code))
# Occupational similarity matrix from Mealy and dRC
temp2 <- read.csv(here("../dRC_Replication/data/occupational_mobility_network.csv")) %>%
tibble
acs_codes <- read.csv(here("../dRC_Replication/data/ipums_variables.csv")) %>%
tibble %>%
select(acs_occ_code)
empir_trans_probs
acs_codes <- read.csv(here("../dRC_Replication/data/ipums_variables.csv")) %>%
tibble %>%
pull(acs_occ_code)
empir_trans_probs %>% fitler(acs_code %in% acs_codes)
empir_trans_probs %>% filter(acs_code %in% acs_codes)
sum(acs_codes %in% empir_trans_probs$acs_code)
acs_codes[!(acs_cods %in% empir_trans_probs$acs_code)]
acs_codes[!(acs_codes %in% empir_trans_probs$acs_code)]
acs_codes[!(acs_codes %in% empir_trans_probs$related_acs_code)]
empir_trans_probs %>% pull(acs_code) %>% sort %>% unique
# Occupational similarity matrix from Mealy and dRC
temp2 <- read.csv(here("../dRC_Replication/data/occupational_mobility_network.csv")) %>%
tibble
acs_codes <- read.csv(here("../dRC_Replication/data/ipums_variables.csv")) %>%
tibble %>%
pull(acs_occ_code)
temp <- read_xlsx(here("../data/Related Occupations.xlsx")) %>%
rename(soc_code = 1, related_soc_code = 3, index = Index) %>%
select(soc_code, related_soc_code, index) %>%
filter(soc_code %in% acs_codes & related_soc_code %in% acs_codes)
# Orhtoptists and Meter Readers, Utilities are the two occupations that are not listed as "related" to other occupations
temp %>%
pull(soc_code) %>%
unique %>%
setdiff(unique(temp$related_soc_code))
# SOC Code from 8-digit to 6-digit (same as excluding the last two values of the soc code)
# https://www.onetcenter.org/crosswalks.html
# test to see whether 6-digit and 8-digit soc codes are the same
read_xlsx(here("../data/2019_to_SOC_Crosswalk.xlsx"), skip = 2) %>%
rename(soc_code_8 = 1, soc_code_6 = 3)  %>%
select(1,3) %>%
mutate(soc_code_8 = substr(soc_code_8,1,7),
test = identical(soc_code_8, soc_code_6)) %>%
filter(!test) %>% nrow(.) == 0
# https://www.bls.gov/emp/documentation/crosswalks.htm
soc_acs <- read_xlsx(here("../data/nem-occcode-acs-crosswalk.xlsx"), skip = 4) %>%
rename(soc_code_6 = 2, acs_code = 4) %>%
select(2,4)
empir_trans_probs <- temp %>%
mutate(across(c(soc_code, related_soc_code), ~substr(., 1,7))) %>%
left_join(., soc_acs, join_by(soc_code == soc_code_6)) %>%
left_join(., soc_acs, join_by(related_soc_code == soc_code_6)) %>%
rename(acs_code = acs_code.x, related_acs_code = acs_code.y)
empir_trans_probs
acs_codes <- read.csv(here("../dRC_Replication/data/ipums_variables.csv")) %>%
tibble %>%
pull(acs_occ_code)
temp <- read_xlsx(here("../data/Related Occupations.xlsx")) %>%
rename(soc_code = 1, related_soc_code = 3, index = Index) %>%
select(soc_code, related_soc_code, index)
temp <- read_xlsx(here("../data/Related Occupations.xlsx")) %>%
rename(soc_code = 1, related_soc_code = 3, index = Index) %>%
select(soc_code, related_soc_code, index)
# Orhtoptists and Meter Readers, Utilities are the two occupations that are not listed as "related" to other occupations
temp %>%
pull(soc_code) %>%
unique %>%
setdiff(unique(temp$related_soc_code))
# SOC Code from 8-digit to 6-digit (same as excluding the last two values of the soc code)
# https://www.onetcenter.org/crosswalks.html
# test to see whether 6-digit and 8-digit soc codes are the same
read_xlsx(here("../data/2019_to_SOC_Crosswalk.xlsx"), skip = 2) %>%
rename(soc_code_8 = 1, soc_code_6 = 3)  %>%
select(1,3) %>%
mutate(soc_code_8 = substr(soc_code_8,1,7),
test = identical(soc_code_8, soc_code_6)) %>%
filter(!test) %>% nrow(.) == 0
# https://www.bls.gov/emp/documentation/crosswalks.htm
soc_acs <- read_xlsx(here("../data/nem-occcode-acs-crosswalk.xlsx"), skip = 4) %>%
rename(soc_code_6 = 2, acs_code = 4) %>%
select(2,4)
empir_trans_probs <- temp %>%
mutate(across(c(soc_code, related_soc_code), ~substr(., 1,7))) %>%
left_join(., soc_acs, join_by(soc_code == soc_code_6)) %>%
left_join(., soc_acs, join_by(related_soc_code == soc_code_6)) %>%
rename(acs_code = acs_code.x, related_acs_code = acs_code.y) %>%
filter(soc_code %in% acs_codes & related_soc_code %in% acs_codes)
empir_trans_probs <- temp %>%
mutate(across(c(soc_code, related_soc_code), ~substr(., 1,7))) %>%
left_join(., soc_acs, join_by(soc_code == soc_code_6)) %>%
left_join(., soc_acs, join_by(related_soc_code == soc_code_6)) %>%
rename(acs_code = acs_code.x, related_acs_code = acs_code.y) %>%
filter(acs_code %in% acs_codes & related_acs_code %in% acs_codes)
empir_trans_probs <- temp %>%
mutate(across(c(soc_code, related_soc_code), ~substr(., 1,7))) %>%
left_join(., soc_acs, join_by(soc_code == soc_code_6)) %>%
left_join(., soc_acs, join_by(related_soc_code == soc_code_6)) %>%
rename(acs_code = acs_code.x, related_acs_code = acs_code.y) %>%
filter(acs_code %in% acs_codes & related_acs_code %in% acs_codes) %>%
group_by(acs_code, related_acs_code) %>%
summarise(index = mean(index, na.rm = TRUE)) %>%
group_by(acs_code) %>%
mutate(nor_index = 1 - (index/max(index))) %>%
pivot_wider(id_cols = acs_code, names_from = related_acs_code, values_from = nor_index, values_fill = 0)
empir_trans_probs
temp %>%
mutate(across(c(soc_code, related_soc_code), ~substr(., 1,7))) %>%
left_join(., soc_acs, join_by(soc_code == soc_code_6)) %>%
left_join(., soc_acs, join_by(related_soc_code == soc_code_6)) %>%
rename(acs_code = acs_code.x, related_acs_code = acs_code.y) %>%
filter(acs_code %in% acs_codes & related_acs_code %in% acs_codes) %>%
group_by(acs_code, related_acs_code) %>%
summarise(index = mean(index, na.rm = TRUE)) %>%
group_by(acs_code) %>%
mutate(nor_index = 1 - (index/max(index)))
temp %>%
mutate(across(c(soc_code, related_soc_code), ~substr(., 1,7))) %>%
left_join(., soc_acs, join_by(soc_code == soc_code_6)) %>%
left_join(., soc_acs, join_by(related_soc_code == soc_code_6)) %>%
rename(acs_code = acs_code.x, related_acs_code = acs_code.y) %>%
filter(acs_code %in% acs_codes & related_acs_code %in% acs_codes)
temp %>%
mutate(across(c(soc_code, related_soc_code), ~substr(., 1,7))) %>%
left_join(., soc_acs, join_by(soc_code == soc_code_6)) %>%
left_join(., soc_acs, join_by(related_soc_code == soc_code_6)) %>%
rename(acs_code = acs_code.x, related_acs_code = acs_code.y) %>%
filter(acs_code %in% acs_codes & related_acs_code %in% acs_codes) %>%
group_by(acs_code, related_acs_code) %>%
summarise(index = mean(index, na.rm = TRUE)
temp %>%
temp %>%
mutate(across(c(soc_code, related_soc_code), ~substr(., 1,7))) %>%
left_join(., soc_acs, join_by(soc_code == soc_code_6)) %>%
left_join(., soc_acs, join_by(related_soc_code == soc_code_6)) %>%
rename(acs_code = acs_code.x, related_acs_code = acs_code.y) %>%
filter(acs_code %in% acs_codes & related_acs_code %in% acs_codes) %>%
group_by(acs_code, related_acs_code) %>%
summarise(index = mean(index, na.rm = TRUE))
temp %>%
mutate(across(c(soc_code, related_soc_code), ~substr(., 1,7))) %>%
left_join(., soc_acs, join_by(soc_code == soc_code_6)) %>%
left_join(., soc_acs, join_by(related_soc_code == soc_code_6)) %>%
rename(acs_code = acs_code.x, related_acs_code = acs_code.y) %>%
filter(acs_code %in% acs_codes & related_acs_code %in% acs_codes) %>%
group_by(acs_code, related_acs_code) %>%
summarise(index = mean(index, na.rm = TRUE)) %>%
ungroup %>%
complate(acs_code, related_acs_code)
?complete
temp %>%
mutate(across(c(soc_code, related_soc_code), ~substr(., 1,7))) %>%
left_join(., soc_acs, join_by(soc_code == soc_code_6)) %>%
left_join(., soc_acs, join_by(related_soc_code == soc_code_6)) %>%
rename(acs_code = acs_code.x, related_acs_code = acs_code.y) %>%
filter(acs_code %in% acs_codes & related_acs_code %in% acs_codes) %>%
group_by(acs_code, related_acs_code) %>%
summarise(index = mean(index, na.rm = TRUE)) %>%
ungroup %>%
complete(acs_code, related_acs_code, fill = 0)
temp %>%
mutate(across(c(soc_code, related_soc_code), ~substr(., 1,7))) %>%
left_join(., soc_acs, join_by(soc_code == soc_code_6)) %>%
left_join(., soc_acs, join_by(related_soc_code == soc_code_6)) %>%
rename(acs_code = acs_code.x, related_acs_code = acs_code.y) %>%
filter(acs_code %in% acs_codes & related_acs_code %in% acs_codes) %>%
group_by(acs_code, related_acs_code) %>%
summarise(index = mean(index, na.rm = TRUE)) %>%
ungroup %>%
complete(acs_code, related_acs_code, fill = list(index = 0))
temp %>%
mutate(across(c(soc_code, related_soc_code), ~substr(., 1,7))) %>%
left_join(., soc_acs, join_by(soc_code == soc_code_6)) %>%
left_join(., soc_acs, join_by(related_soc_code == soc_code_6)) %>%
rename(acs_code = acs_code.x, related_acs_code = acs_code.y) %>%
filter(acs_code %in% acs_codes & related_acs_code %in% acs_codes) %>%
group_by(acs_code, related_acs_code) %>%
summarise(index = mean(index, na.rm = TRUE)) %>%
ungroup %>%
complete(acs_code, related_acs_code, fill = list(index = 0)) %>%
group_by(acs_code) %>%
mutate(nor_index = 1 - (index/max(index))) %>%
pivot_wider(id_cols = acs_code, names_from = related_acs_code, values_from = nor_index, values_fill = 0)
temp %>%
mutate(across(c(soc_code, related_soc_code), ~substr(., 1,7))) %>%
left_join(., soc_acs, join_by(soc_code == soc_code_6)) %>%
left_join(., soc_acs, join_by(related_soc_code == soc_code_6)) %>%
rename(acs_code = acs_code.x, related_acs_code = acs_code.y) %>%
filter(acs_code %in% acs_codes & related_acs_code %in% acs_codes) %>%
group_by(acs_code, related_acs_code) %>%
summarise(index = mean(index, na.rm = TRUE)) %>%
ungroup %>%
complete(acs_code, related_acs_code, fill = list(index = 0))
363*363
empir_trans_probs <- temp %>%
mutate(across(c(soc_code, related_soc_code), ~substr(., 1,7))) %>%
left_join(., soc_acs, join_by(soc_code == soc_code_6)) %>%
left_join(., soc_acs, join_by(related_soc_code == soc_code_6)) %>%
rename(acs_code = acs_code.x, related_acs_code = acs_code.y) %>%
filter(acs_code %in% acs_codes & related_acs_code %in% acs_codes) %>%
group_by(acs_code, related_acs_code) %>%
summarise(index = mean(index, na.rm = TRUE)) %>%
ungroup %>%
complete(acs_code, related_acs_code, fill = list(index = 0)) %>%
group_by(acs_code) %>%
mutate(nor_index = 1 - (index/max(index))) %>%
pivot_wider(id_cols = acs_code, names_from = related_acs_code, values_from = nor_index, values_fill = 0)
write.xlsx(empir_trans_probs, here("../data/agnostic_occ_sim_matrix.xlsx"))
empir_trans_probs %>% filter(is.na(acs_code))
empir_trans_probs %>% filter(is.na(related_acs_code))
temp %>%
mutate(across(c(soc_code, related_soc_code), ~substr(., 1,7))) %>%
left_join(., soc_acs, join_by(soc_code == soc_code_6)) %>%
left_join(., soc_acs, join_by(related_soc_code == soc_code_6)) %>%
rename(acs_code = acs_code.x, related_acs_code = acs_code.y) %>%
filter(acs_code %in% acs_codes & related_acs_code %in% acs_codes) %>%
group_by(acs_code, related_acs_code) %>%
summarise(index = mean(index, na.rm = TRUE)) %>%
ungroup %>%
complete(acs_code, related_acs_code, fill = list(index = 0)) %>%
group_by(acs_code) %>%
mutate(nor_index = 1 - (index/max(index))) %>% filter(is.na(related_acs_code))
empir_trans_probs <- temp %>%
mutate(across(c(soc_code, related_soc_code), ~substr(., 1,7))) %>%
left_join(., soc_acs, join_by(soc_code == soc_code_6)) %>%
left_join(., soc_acs, join_by(related_soc_code == soc_code_6)) %>%
rename(acs_code = acs_code.x, related_acs_code = acs_code.y) %>%
filter(acs_code %in% acs_codes & related_acs_code %in% acs_codes) %>%
group_by(acs_code, related_acs_code) %>%
summarise(index = mean(index, na.rm = TRUE)) %>%
ungroup %>%
complete(acs_code, related_acs_code, fill = list(index = 0)) %>%
group_by(acs_code) %>%
mutate(nor_index = 1 - (index/max(index))) %>% filter(is.na(acs_code))
temp %>%
mutate(across(c(soc_code, related_soc_code), ~substr(., 1,7))) %>%
left_join(., soc_acs, join_by(soc_code == soc_code_6)) %>%
left_join(., soc_acs, join_by(related_soc_code == soc_code_6)) %>%
rename(acs_code = acs_code.x, related_acs_code = acs_code.y) %>%
filter(acs_code %in% acs_codes & related_acs_code %in% acs_codes) %>%
group_by(acs_code, related_acs_code) %>%
summarise(index = mean(index, na.rm = TRUE)) %>%
ungroup %>%
complete(acs_code, related_acs_code, fill = list(index = 0)) %>%
group_by(acs_code) %>%
mutate(nor_index = 1 - (index/max(index))) %>% filter(is.na(acs_code))
empir_trans_probs <- temp %>%
mutate(across(c(soc_code, related_soc_code), ~substr(., 1,7))) %>%
left_join(., soc_acs, join_by(soc_code == soc_code_6)) %>%
left_join(., soc_acs, join_by(related_soc_code == soc_code_6)) %>%
rename(acs_code = acs_code.x, related_acs_code = acs_code.y) %>%
filter(acs_code %in% acs_codes & related_acs_code %in% acs_codes) %>%
group_by(acs_code, related_acs_code) %>%
summarise(index = mean(index, na.rm = TRUE)) %>%
ungroup %>%
complete(acs_code, related_acs_code, fill = list(index = 0)) %>%
group_by(acs_code) %>%
mutate(nor_index = 1 - (index/max(index))) %>%
pivot_wider(id_cols = acs_code, names_from = related_acs_code, values_from = nor_index, values_fill = 0)
write.xlsx(empir_trans_probs, here("../data/agnostic_occ_sim_matrix.xlsx"))
# Occupational similarity matrix from Mealy and dRC
temp2 <- read.csv(here("../dRC_Replication/data/occupational_mobility_network.csv")) %>%
tibble
acs_codes <- read.csv(here("../dRC_Replication/data/ipums_variables.csv")) %>%
tibble %>%
pull(acs_occ_code)
temp <- read_xlsx(here("../data/Related Occupations.xlsx")) %>%
rename(soc_code = 1, related_soc_code = 3, index = Index) %>%
select(soc_code, related_soc_code, index)
# Orhtoptists and Meter Readers, Utilities are the two occupations that are not listed as "related" to other occupations
temp %>%
pull(soc_code) %>%
unique %>%
setdiff(unique(temp$related_soc_code))
# SOC Code from 8-digit to 6-digit (same as excluding the last two values of the soc code)
# https://www.onetcenter.org/crosswalks.html
# test to see whether 6-digit and 8-digit soc codes are the same
read_xlsx(here("../data/2019_to_SOC_Crosswalk.xlsx"), skip = 2) %>%
rename(soc_code_8 = 1, soc_code_6 = 3)  %>%
select(1,3) %>%
mutate(soc_code_8 = substr(soc_code_8,1,7),
test = identical(soc_code_8, soc_code_6)) %>%
filter(!test) %>% nrow(.) == 0
# https://www.bls.gov/emp/documentation/crosswalks.htm
soc_acs <- read_xlsx(here("../data/nem-occcode-acs-crosswalk.xlsx"), skip = 4) %>%
rename(soc_code_6 = 2, acs_code = 4) %>%
select(2,4)
empir_trans_probs <- temp %>%
mutate(across(c(soc_code, related_soc_code), ~substr(., 1,7))) %>%
left_join(., soc_acs, join_by(soc_code == soc_code_6)) %>%
left_join(., soc_acs, join_by(related_soc_code == soc_code_6)) %>%
rename(acs_code = acs_code.x, related_acs_code = acs_code.y) %>%
filter(acs_code %in% acs_codes & related_acs_code %in% acs_codes) %>%
group_by(acs_code, related_acs_code) %>%
summarise(index = mean(index, na.rm = TRUE)) %>%
ungroup %>%
complete(acs_code, related_acs_code, fill = list(index = 0)) %>%
group_by(acs_code) %>%
mutate(nor_index = 1 - (index/max(index))) %>%
pivot_wider(id_cols = acs_code, names_from = related_acs_code, values_from = nor_index, values_fill = 0)
library(tidyverse)
library(here)
library(readxl)
getwd()
read_xlsx(here("data/occ_gender_shares.xlsx")
)
