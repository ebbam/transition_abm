year == 2004 & month %in% c(8, 9, 10, 11, 12) & mis > 4 ~ "",
year == 2005 & month %in% c(1,2,3,4) & mis > 4 ~ "",
year == 2005 & month == 5 & mis > 5 ~ "",
year == 2005 & month == 6 & mis > 6 ~ "",
year == 2005 & month == 7 & mis > 7 ~ ""),
#TRUE ~ NA),
# Apply similar rules for `hhid2` adjustments and defaults
serial = ifelse(serial %in% c("", "-1"), "0", serial)) %>%
group_by(hhid, hhid2, lineno, state, serial, firstInt, sex, ethn, mis) %>%
mutate(dup = row_number() - 1) %>%
ungroup
cps_data %>% pull(dup) %>% table
# Construct unique ID
cps_data <- cps_data %>%
mutate(final_id_str = str_c(hhid, hhid2, lineno, serial, state, firstInt, sex, ethn, dup, sep = "_")) %>% #dup,
group_by(final_id_str) %>%
mutate(final_id = cur_group_id()) %>% #group_indices(cps_data, final_id_str))
ungroup
# Adjust demographic variables
cps_data <- cps_data %>%
mutate(black = ifelse((race %in% c(2, 6, 10, 11, 12) & year > 2002) | (race == 2 & year <= 2002), 1, 0),
married = ifelse(married %in% c(1, 2), 1, 0),
married = ifelse(married %in% c(3, 4, 5, 6, -1), 0, married),
female = ifelse(sex == 2, 1, 0),
marriedfemale = married * female)
# Additional feature engineering (e.g., Census regions, education levels)
cps_data <- cps_data %>%
mutate(cen_region = case_when(
gereg == 1 ~ 2,
gereg == 2 ~ 1,
gereg == 3 ~ 3,
gereg == 4 ~ 4
),
educ = case_when(
grdatn <= 38 ~ 1,
grdatn == 39 ~ 2,
grdatn > 39 & grdatn <= 42 ~ 3,
grdatn >= 43 & grdatn != NA ~ 4
),
hs = ifelse(educ == 2, 1, 0),
somecol = ifelse(educ == 3, 1, 0),
college = ifelse(educ == 4, 1, 0))
# Occupation adjustments
cps_data <- cps_data %>%
mutate(occ_pre02 = ifelse(year <= 2002, PRDTOCC1, NA),
soc = case_when(
year >= 2003 & occdt == 1 ~ 11,
year >= 2003 & occdt == 2  ~ 13,
# Include other mappings for `soc` values
))
# Clean labor force status
cps_data <- cps_data %>%
mutate(searchers = as.numeric(mlr == 4),
nonsearchers = as.numeric(lfs == "D"),
unemp = as.numeric(mlr %in% c(3, 4)),
nonpart = as.numeric(mlr %in% c(5, 6, 7)),
emp = as.numeric(mlr %in% c(1, 2)),
layoff = as.numeric(mlr == 3))
# Load the CPS data
#data_fig3 <- readRDS(paste0(base, "final_data/R_final/full_CPS_data.RDS"))
data_fig3 <- cps_data
# Calculate weighted sums for different groups
data_fig3 <- data_fig3 %>%
group_by(year, month, searchers) %>%
mutate(num_search = if_else(searchers == 1, sum(newwgt, na.rm = TRUE), NA_real_)) %>%
ungroup() %>%
group_by(year, month, nonsearchers) %>%
mutate(num_nonsearch = if_else(nonsearchers == 1, sum(newwgt, na.rm = TRUE), NA_real_)) %>%
ungroup() %>%
group_by(year, month, unemp) %>%
mutate(num_unemp = if_else(unemp == 1, sum(newwgt, na.rm = TRUE), NA_real_)) %>%
ungroup() %>%
group_by(year, month, emp) %>%
mutate(num_emp = if_else(emp == 1, sum(newwgt, na.rm = TRUE), NA_real_)) %>%
ungroup() %>%
group_by(year, month, nonpart) %>%
mutate(num_nonpart = if_else(nonpart == 1, sum(newwgt, na.rm = TRUE), NA_real_)) %>%
ungroup()
# Collapse the data by year and month
collapsed_data_3a <- data_fig3 %>%
group_by(year, month) %>%
summarise(across(c(num_search, num_nonsearch, num_unemp, num_nonpart, num_emp), ~mean(., na.rm = TRUE))) %>%
ungroup() %>%
select(year, month, num_search, num_nonsearch, num_unemp, num_nonpart, num_emp)
# Seasonal adjustment using regression
# Function to seasonally adjust a variable
seasonal_adjust <- function(data, var) {
# Perform regression
fit <- lm(as.formula(paste(var, "~ factor(month)")), data = data)
# Get the coefficients for each month
coeffs <- coef(fit)
# Subtract the monthly coefficients
data <- data %>%
rowwise() %>%
mutate(!!var := !!sym(var) - (coeffs[paste0("factor(month)", month)] %>% coalesce(0))) %>%
ungroup()
return(data)
}
collapsed_data_3a_adj <- collapsed_data_3a
# Apply the seasonal adjustment to each variable
for (var in c("num_search", "num_nonsearch", "num_unemp", "num_nonpart", "num_emp")) {
collapsed_data_3a_adj <- seasonal_adjust(collapsed_data_3a_adj, var)
}
fig3a_new <- collapsed_data_3a_adj
# Data preprocessing
year <- fig2a_data[[1]]
nonemp_base <- fig2a_data[2:3]
unemp_base <- fig2b_data[2:3]
date <- figure3a_data %>% mutate(date = year + (month/12)) %>% pull(date)
searchers <- figure3a_data[[3]]
nonsearchers <- figure3a_data[[4]]
unemp <- figure3a_data[[5]]
nonpart <- figure3a_data[[6]]
emp <- figure3a_data[[7]]
date_new <- fig3a_new %>% mutate(date = year + (month/12)) %>% pull(date)
searchers_new <- fig3a_new[[3]]
nonsearchers_new <- fig3a_new[[4]]
unemp_new <- fig3a_new[[5]]
nonpart_new <- fig3a_new[[6]]
emp_new <- fig3a_new[[7]]
frac_unemp_new <- unemp_new / (unemp_new + nonpart_new)
time_unemp_new <- figure3b_data[[4]]
effort_unemp_UNE_new <- time_unemp_new * unemp_new / (unemp_new + nonpart_new + emp_new)
unemp_frac_new <- unemp_new / (unemp_new + nonpart_new + emp_new)
# Helper function to add shaded recession areas
add_recession <- function(p) {
p +
annotate("rect", xmin = 2007 + 11/12, xmax = 2009.5, ymin = -Inf, ymax = Inf, alpha = 0.2) +
annotate("rect", xmin = 2001 + 3/12, xmax = 2001 + 11/12, ymin = -Inf, ymax = Inf, alpha = 0.2)
}
# Figure 3a
fig3a <- ggplot() +
geom_line(aes(x = date, y = frac_unemp), color = "blue", size = 1) +
#scale_x_continuous(breaks = seq(1994, 2014, by = 2)) +
scale_y_continuous(limits = c(0.05, 0.25), breaks = seq(0.05, 0.25, by = 0.05)) +
theme_minimal() +
labs(x = "Date", y = "Extensive Margin")
fig3a <- add_recession(fig3a)
# Figure 3b
fig3b <- ggplot() +
geom_line(aes(x = date, y = time_unemp), color = "blue", size = 1) +
#scale_x_continuous(breaks = seq(1994, 2014, by = 2)) +
scale_y_continuous(limits = c(25, 45), breaks = seq(25, 45, by = 5)) +
theme_minimal() +
labs(x = "Date", y = "Intensive Margin")
fig3b <- add_recession(fig3b)
print(fig3a + fig3b + plot_annotation(
"Figure 3. The Time Series of the Extensive Margin (U/(U + N )) ( panel A)\n and the Intensive Margin ( panel B), \nMeasured by the Average Minutes of Search per Day for Unemployed Workers",
caption = "Notes: Panel A plots the monthly ratio of the number of unemployed (U) to the total number of unemployed (U + N ) in the CPS from 1994–2014. \nPanel B plots the average minutes of search per day, constructed as described in the text. Each observation is weighted by its CPS sample weight.",
theme=theme(plot.title=element_text(hjust=0.5))))
# Figure 3b
fig3bnew <- ggplot() +
geom_line(aes(x = date_new, y = time_unemp_new), color = "blue", size = 1) +
#scale_x_continuous(breaks = seq(1994, 2014, by = 2)) +
scale_y_continuous(limits = c(25, 45), breaks = seq(25, 45, by = 5)) +
theme_minimal() +
labs(x = "Date", y = "Intensive Margin")
fig3bnew <- add_recession(fig3bnew)
print(fig3anew + fig3bnew + plot_annotation(
"Figure 3. The Time Series of the Extensive Margin (U/(U + N )) ( panel A)\n and the Intensive Margin ( panel B), \nMeasured by the Average Minutes of Search per Day for Unemployed Workers",
caption = "Notes: Panel A plots the monthly ratio of the number of unemployed (U) to the total number of unemployed (U + N ) in the CPS from 1994–2014. \nPanel B plots the average minutes of search per day, constructed as described in the text. Each observation is weighted by its CPS sample weight.",
theme=theme(plot.title=element_text(hjust=0.5))))
# Figure 3a
fig3anew <- ggplot() +
geom_line(aes(x = date_new, y = frac_unemp_new), color = "blue", size = 1) +
#scale_x_continuous(breaks = seq(1994, 2014, by = 2)) +
scale_y_continuous(limits = c(0.05, 0.25), breaks = seq(0.05, 0.25, by = 0.05)) +
theme_minimal() +
labs(x = "Date", y = "Extensive Margin")
fig3anew <- add_recession(fig3anew)
print(fig3anew + fig3bnew + plot_annotation(
"Figure 3. The Time Series of the Extensive Margin (U/(U + N )) ( panel A)\n and the Intensive Margin ( panel B), \nMeasured by the Average Minutes of Search per Day for Unemployed Workers",
caption = "Notes: Panel A plots the monthly ratio of the number of unemployed (U) to the total number of unemployed (U + N ) in the CPS from 1994–2014. \nPanel B plots the average minutes of search per day, constructed as described in the text. Each observation is weighted by its CPS sample weight.",
theme=theme(plot.title=element_text(hjust=0.5))))
# Unemployed data
data_unemp <- data_fig3 %>%
filter(unemp == 1) %>%
group_by(year, month) %>%
summarise(
numsearch = weighted.mean(numsearch, newwgt, na.rm = TRUE),
time_create = weighted.mean(time_create, newwgt, na.rm = TRUE)
) %>%
ungroup()
# Load the CPS data
#data_fig3 <- readRDS(paste0(base, "final_data/R_final/full_CPS_data.RDS"))
data_fig3 <- cps_data
# Calculate weighted sums for different groups
data_fig3 <- data_fig3 %>%
group_by(year, month, searchers) %>%
mutate(num_search = if_else(searchers == 1, sum(newwgt, na.rm = TRUE), NA_real_)) %>%
ungroup() %>%
group_by(year, month, nonsearchers) %>%
mutate(num_nonsearch = if_else(nonsearchers == 1, sum(newwgt, na.rm = TRUE), NA_real_)) %>%
ungroup() %>%
group_by(year, month, unemp) %>%
mutate(num_unemp = if_else(unemp == 1, sum(newwgt, na.rm = TRUE), NA_real_)) %>%
ungroup() %>%
group_by(year, month, emp) %>%
mutate(num_emp = if_else(emp == 1, sum(newwgt, na.rm = TRUE), NA_real_)) %>%
ungroup() %>%
group_by(year, month, nonpart) %>%
mutate(num_nonpart = if_else(nonpart == 1, sum(newwgt, na.rm = TRUE), NA_real_)) %>%
ungroup()
# Collapse the data by year and month
collapsed_data_3a <- data_fig3 %>%
group_by(year, month) %>%
summarise(across(c(num_search, num_nonsearch, num_unemp, num_nonpart, num_emp), ~mean(., na.rm = TRUE))) %>%
ungroup() %>%
select(year, month, num_search, num_nonsearch, num_unemp, num_nonpart, num_emp)
# Seasonal adjustment using regression
# Function to seasonally adjust a variable
seasonal_adjust <- function(data, var) {
# Perform regression
fit <- lm(as.formula(paste(var, "~ factor(month)")), data = data)
# Get the coefficients for each month
coeffs <- coef(fit)
# Subtract the monthly coefficients
data <- data %>%
rowwise() %>%
mutate(!!var := !!sym(var) - (coeffs[paste0("factor(month)", month)] %>% coalesce(0))) %>%
ungroup()
return(data)
}
collapsed_data_3a_adj <- collapsed_data_3a
# Apply the seasonal adjustment to each variable
for (var in c("num_search", "num_nonsearch", "num_unemp", "num_nonpart", "num_emp")) {
collapsed_data_3a_adj <- seasonal_adjust(collapsed_data_3a_adj, var)
}
# Load data (update file paths as needed)
fig2a_data <- read.csv(paste0(base, "int_data/ATUS/Fig2a_data.csv"))
fig2b_data <- read.csv(paste0(base, "int_data/ATUS/Fig2b_data.csv"))
figure3a_data <-read_csv(paste0(base, "final_data/R_final/Figure3a_data.csv"))[-1] #read_csv(paste0(base, "int_data/CPS/Figure3a_data.csv")) # collapsed_data_3a_adj <- read.csv(here(paste0(base, "final_data/R_final/Figure3a_data.csv")))
figure3b_data <- read_csv(paste0(base, "final_data/R_final/Figure3b_data.csv"))[-1] #read.csv(paste0(base, "int_data/CPS/Figure3b_data.csv")) # read.csv(data_unemp_adj, here(paste0(base, "final_data/R_final/Figure3b_data.csv")))
fig3a_new <- collapsed_data_3a_adj
# Data preprocessing
year <- fig2a_data[[1]]
nonemp_base <- fig2a_data[2:3]
unemp_base <- fig2b_data[2:3]
date <- figure3a_data %>% mutate(date = year + (month/12)) %>% pull(date)
searchers <- figure3a_data[[3]]
nonsearchers <- figure3a_data[[4]]
unemp <- figure3a_data[[5]]
nonpart <- figure3a_data[[6]]
emp <- figure3a_data[[7]]
frac_unemp <- unemp / (unemp + nonpart)
time_unemp <- figure3b_data[[4]]
effort_unemp_UNE <- time_unemp * unemp / (unemp + nonpart + emp)
unemp_frac <- unemp / (unemp + nonpart + emp)
date_new <- fig3a_new %>% mutate(date = year + (month/12)) %>% pull(date)
searchers_new <- fig3a_new[[3]]
nonsearchers_new <- fig3a_new[[4]]
unemp_new <- fig3a_new[[5]]
nonpart_new <- fig3a_new[[6]]
emp_new <- fig3a_new[[7]]
frac_unemp_new <- unemp_new / (unemp_new + nonpart_new)
time_unemp_new <- figure3b_data[[4]]
time_unemp_new <- figure3b_new[[4]]
time_unemp_new <- figure3b_data[[4]]
effort_unemp_UNE_new <- time_unemp_new * unemp_new / (unemp_new + nonpart_new + emp_new)
unemp_frac_new <- unemp_new / (unemp_new + nonpart_new + emp_new)
# Helper function to add shaded recession areas
add_recession <- function(p) {
p +
annotate("rect", xmin = 2007 + 11/12, xmax = 2009.5, ymin = -Inf, ymax = Inf, alpha = 0.2) +
annotate("rect", xmin = 2001 + 3/12, xmax = 2001 + 11/12, ymin = -Inf, ymax = Inf, alpha = 0.2)
}
# Figure 3a
fig3a <- ggplot() +
geom_line(aes(x = date, y = frac_unemp), color = "blue", size = 1) +
#scale_x_continuous(breaks = seq(1994, 2014, by = 2)) +
scale_y_continuous(limits = c(0.05, 0.25), breaks = seq(0.05, 0.25, by = 0.05)) +
theme_minimal() +
labs(x = "Date", y = "Extensive Margin")
fig3a <- add_recession(fig3a)
# Figure 3b
fig3b <- ggplot() +
geom_line(aes(x = date, y = time_unemp), color = "blue", size = 1) +
#scale_x_continuous(breaks = seq(1994, 2014, by = 2)) +
scale_y_continuous(limits = c(25, 45), breaks = seq(25, 45, by = 5)) +
theme_minimal() +
labs(x = "Date", y = "Intensive Margin")
fig3b <- add_recession(fig3b)
print(fig3a + fig3b + plot_annotation(
"Figure 3. The Time Series of the Extensive Margin (U/(U + N )) ( panel A)\n and the Intensive Margin ( panel B), \nMeasured by the Average Minutes of Search per Day for Unemployed Workers",
caption = "Notes: Panel A plots the monthly ratio of the number of unemployed (U) to the total number of unemployed (U + N ) in the CPS from 1994–2014. \nPanel B plots the average minutes of search per day, constructed as described in the text. Each observation is weighted by its CPS sample weight.",
theme=theme(plot.title=element_text(hjust=0.5))))
# Figure 3a
fig3anew <- ggplot() +
geom_line(aes(x = date_new, y = frac_unemp_new), color = "blue", size = 1) +
#scale_x_continuous(breaks = seq(1994, 2014, by = 2)) +
scale_y_continuous(limits = c(0.05, 0.25), breaks = seq(0.05, 0.25, by = 0.05)) +
theme_minimal() +
labs(x = "Date", y = "Extensive Margin")
fig3anew <- add_recession(fig3anew)
# Figure 3b
fig3bnew <- ggplot() +
geom_line(aes(x = date_new, y = time_unemp_new), color = "blue", size = 1) +
#scale_x_continuous(breaks = seq(1994, 2014, by = 2)) +
scale_y_continuous(limits = c(25, 45), breaks = seq(25, 45, by = 5)) +
theme_minimal() +
labs(x = "Date", y = "Intensive Margin")
fig3bnew <- add_recession(fig3bnew)
print(fig3anew + fig3bnew + plot_annotation(
"Figure 3. The Time Series of the Extensive Margin (U/(U + N )) ( panel A)\n and the Intensive Margin ( panel B), \nMeasured by the Average Minutes of Search per Day for Unemployed Workers",
caption = "Notes: Panel A plots the monthly ratio of the number of unemployed (U) to the total number of unemployed (U + N ) in the CPS from 1994–2014. \nPanel B plots the average minutes of search per day, constructed as described in the text. Each observation is weighted by its CPS sample weight.",
theme=theme(plot.title=element_text(hjust=0.5))))
# Load the data
data_time <- read_dta("$int_data/ATUS/time_method_reweight.dta")
base
# Load the data
data_time <- read_dta(here(base, "int_data/ATUS/time_method_reweight.dta"))
data_time
names(data_time)
names(cps_data)
base
# Save final dataset
saveRDS(cps_data, here(base, "final_data/R_final/temp_full_CPS_data_before_new_years.rds"))
data_fig3 <- readRDS(here(base, "final_data/R_final/temp_full_CPS_data_before_new_years.rds"))
# Calculate weighted sums for different groups
data_fig3 <- data_fig3 %>%
group_by(year, month, searchers) %>%
mutate(num_search = if_else(searchers == 1, sum(newwgt, na.rm = TRUE), NA_real_)) %>%
ungroup() %>%
group_by(year, month, nonsearchers) %>%
mutate(num_nonsearch = if_else(nonsearchers == 1, sum(newwgt, na.rm = TRUE), NA_real_)) %>%
ungroup() %>%
group_by(year, month, unemp) %>%
mutate(num_unemp = if_else(unemp == 1, sum(newwgt, na.rm = TRUE), NA_real_)) %>%
ungroup() %>%
group_by(year, month, emp) %>%
mutate(num_emp = if_else(emp == 1, sum(newwgt, na.rm = TRUE), NA_real_)) %>%
ungroup() %>%
group_by(year, month, nonpart) %>%
mutate(num_nonpart = if_else(nonpart == 1, sum(newwgt, na.rm = TRUE), NA_real_)) %>%
ungroup()
# Collapse the data by year and month
collapsed_data_3a <- data_fig3 %>%
group_by(year, month) %>%
summarise(across(c(num_search, num_nonsearch, num_unemp, num_nonpart, num_emp), ~mean(., na.rm = TRUE))) %>%
ungroup() %>%
select(year, month, num_search, num_nonsearch, num_unemp, num_nonpart, num_emp)
# Seasonal adjustment using regression
# Function to seasonally adjust a variable
seasonal_adjust <- function(data, var) {
# Perform regression
fit <- lm(as.formula(paste(var, "~ factor(month)")), data = data)
# Get the coefficients for each month
coeffs <- coef(fit)
# Subtract the monthly coefficients
data <- data %>%
rowwise() %>%
mutate(!!var := !!sym(var) - (coeffs[paste0("factor(month)", month)] %>% coalesce(0))) %>%
ungroup()
return(data)
}
collapsed_data_3a_adj <- collapsed_data_3a
# Apply the seasonal adjustment to each variable
for (var in c("num_search", "num_nonsearch", "num_unemp", "num_nonpart", "num_emp")) {
collapsed_data_3a_adj <- seasonal_adjust(collapsed_data_3a_adj, var)
}
# Load data (update file paths as needed)
fig2a_data <- read.csv(paste0(base, "int_data/ATUS/Fig2a_data.csv"))
fig2b_data <- read.csv(paste0(base, "int_data/ATUS/Fig2b_data.csv"))
figure3a_data <-read_csv(paste0(base, "final_data/R_final/Figure3a_data.csv"))[-1] #read_csv(paste0(base, "int_data/CPS/Figure3a_data.csv")) # collapsed_data_3a_adj <- read.csv(here(paste0(base, "final_data/R_final/Figure3a_data.csv")))
figure3b_data <- read_csv(paste0(base, "final_data/R_final/Figure3b_data.csv"))[-1] #read.csv(paste0(base, "int_data/CPS/Figure3b_data.csv")) # read.csv(data_unemp_adj, here(paste0(base, "final_data/R_final/Figure3b_data.csv")))
fig3a_new <- collapsed_data_3a_adj
# Data preprocessing
year <- fig2a_data[[1]]
nonemp_base <- fig2a_data[2:3]
unemp_base <- fig2b_data[2:3]
date <- figure3a_data %>% mutate(date = year + (month/12)) %>% pull(date)
searchers <- figure3a_data[[3]]
nonsearchers <- figure3a_data[[4]]
unemp <- figure3a_data[[5]]
nonpart <- figure3a_data[[6]]
emp <- figure3a_data[[7]]
frac_unemp <- unemp / (unemp + nonpart)
time_unemp <- figure3b_data[[4]]
effort_unemp_UNE <- time_unemp * unemp / (unemp + nonpart + emp)
unemp_frac <- unemp / (unemp + nonpart + emp)
date_new <- fig3a_new %>% mutate(date = year + (month/12)) %>% pull(date)
searchers_new <- fig3a_new[[3]]
nonsearchers_new <- fig3a_new[[4]]
unemp_new <- fig3a_new[[5]]
nonpart_new <- fig3a_new[[6]]
emp_new <- fig3a_new[[7]]
frac_unemp_new <- unemp_new / (unemp_new + nonpart_new)
time_unemp_new <- figure3b_data[[4]]
effort_unemp_UNE_new <- time_unemp_new * unemp_new / (unemp_new + nonpart_new + emp_new)
unemp_frac_new <- unemp_new / (unemp_new + nonpart_new + emp_new)
# Helper function to add shaded recession areas
add_recession <- function(p) {
p +
annotate("rect", xmin = 2007 + 11/12, xmax = 2009.5, ymin = -Inf, ymax = Inf, alpha = 0.2) +
annotate("rect", xmin = 2001 + 3/12, xmax = 2001 + 11/12, ymin = -Inf, ymax = Inf, alpha = 0.2)
}
# Figure 2a
fig2a <- ggplot() +
geom_line(aes(x = year, y = nonemp_base[[1]]), color = "red", linetype = "dashed", size = 1) +
geom_line(aes(x = year, y = nonemp_base[[2]]), color = "blue", size = 1) +
scale_x_continuous(breaks = 2003:2014) +
scale_y_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 2)) +
theme_minimal()
fig2a <- add_recession(fig2a)
# Figure 2b
fig2b <- ggplot() +
geom_line(aes(x = year, y = unemp_base[[1]]), color = "red", linetype = "dashed", size = 1) +
geom_line(aes(x = year, y = unemp_base[[2]]), color = "blue", size = 1) +
scale_x_continuous(breaks = 2003:2014) +
scale_y_continuous(limits = c(10, 50), breaks = seq(10, 50, by = 10)) +
theme_minimal()
fig2b <- add_recession(fig2b)
print(fig2a + fig2b + plot_annotation("Figure 2. Actual and Imputed Average Search Time (minutes per day) \nfor All Nonemployed Workers ( panel A) and Unemployed Workers ( panel B)",
caption = "Notes: Regressions are estimated in the ATUS from 2003–2014. \nWhile both panels A and B plot the fitted values from the sample regression, panel A plots the actual and imputed search time for all nonemployed, while panel B plots them for just the unemployed. \nObservations are weighted by their ATUS sample weight.",
theme=theme(plot.title=element_text(hjust=0.5))))
# Figure 3a
fig3a <- ggplot() +
geom_line(aes(x = date, y = frac_unemp), color = "blue", size = 1) +
#scale_x_continuous(breaks = seq(1994, 2014, by = 2)) +
scale_y_continuous(limits = c(0.05, 0.25), breaks = seq(0.05, 0.25, by = 0.05)) +
theme_minimal() +
labs(x = "Date", y = "Extensive Margin")
fig3a <- add_recession(fig3a)
# Figure 3b
fig3b <- ggplot() +
geom_line(aes(x = date, y = time_unemp), color = "blue", size = 1) +
#scale_x_continuous(breaks = seq(1994, 2014, by = 2)) +
scale_y_continuous(limits = c(25, 45), breaks = seq(25, 45, by = 5)) +
theme_minimal() +
labs(x = "Date", y = "Intensive Margin")
fig3b <- add_recession(fig3b)
print(fig3a + fig3b + plot_annotation(
"Figure 3. The Time Series of the Extensive Margin (U/(U + N )) ( panel A)\n and the Intensive Margin ( panel B), \nMeasured by the Average Minutes of Search per Day for Unemployed Workers",
caption = "Notes: Panel A plots the monthly ratio of the number of unemployed (U) to the total number of unemployed (U + N ) in the CPS from 1994–2014. \nPanel B plots the average minutes of search per day, constructed as described in the text. Each observation is weighted by its CPS sample weight.",
theme=theme(plot.title=element_text(hjust=0.5))))
# Figure 3a
fig3anew <- ggplot() +
geom_line(aes(x = date_new, y = frac_unemp_new), color = "blue", size = 1) +
#scale_x_continuous(breaks = seq(1994, 2014, by = 2)) +
scale_y_continuous(limits = c(0.05, 0.25), breaks = seq(0.05, 0.25, by = 0.05)) +
theme_minimal() +
labs(x = "Date", y = "Extensive Margin")
fig3anew <- add_recession(fig3anew)
# Figure 3b
fig3bnew <- ggplot() +
geom_line(aes(x = date_new, y = time_unemp_new), color = "blue", size = 1) +
#scale_x_continuous(breaks = seq(1994, 2014, by = 2)) +
scale_y_continuous(limits = c(25, 45), breaks = seq(25, 45, by = 5)) +
theme_minimal() +
labs(x = "Date", y = "Intensive Margin")
fig3bnew <- add_recession(fig3bnew)
print(fig3anew + fig3bnew + plot_annotation(
"Figure 3. The Time Series of the Extensive Margin (U/(U + N )) ( panel A)\n and the Intensive Margin ( panel B), \nMeasured by the Average Minutes of Search per Day for Unemployed Workers",
caption = "Notes: Panel A plots the monthly ratio of the number of unemployed (U) to the total number of unemployed (U + N ) in the CPS from 1994–2014. \nPanel B plots the average minutes of search per day, constructed as described in the text. Each observation is weighted by its CPS sample weight.",
theme=theme(plot.title=element_text(hjust=0.5))))
print(fig3anew + fig3bnew + plot_annotation(
"Figure 3. The Time Series of the Extensive Margin (U/(U + N )) ( panel A)\n and the Intensive Margin ( panel B), \nMeasured by the Average Minutes of Search per Day for Unemployed Workers",
caption = "Notes: Panel A plots the monthly ratio of the number of unemployed (U) to the total number of unemployed (U + N ) in the CPS from 1994–2014. \nPanel B plots the average minutes of search per day, constructed as described in the text. Each observation is weighted by its CPS sample weight.",
theme=theme(plot.title=element_text(hjust=0.5))))
print(fig3a + fig3b + plot_annotation(
"Figure 3. The Time Series of the Extensive Margin (U/(U + N )) ( panel A)\n and the Intensive Margin ( panel B), \nMeasured by the Average Minutes of Search per Day for Unemployed Workers",
caption = "Notes: Panel A plots the monthly ratio of the number of unemployed (U) to the total number of unemployed (U + N ) in the CPS from 1994–2014. \nPanel B plots the average minutes of search per day, constructed as described in the text. Each observation is weighted by its CPS sample weight.",
theme=theme(plot.title=element_text(hjust=0.5))))
# Load necessary libraries
library(plyr) # Only need this for rbind.fill - load this first
library(tidyverse)
library(conflicted)
library(data.table)
library(haven)
library(stringr)
library(here)
library(readr)
library(rio)
conflicted::conflict_prefer_all("dplyr", quiet = TRUE)
conflicts_prefer(here::here)
first = FALSE # set depending on whether the first time running script - if TRUE it will reconvert all dta files to csv files
new = TRUE
test_equal <- function(ref_df = ref_file, new_df = cps_data, verbose = FALSE, full = FALSE){
if(full){
res <- all.equal(ref_df, new_df, check.attributes = FALSE)
}else{
res <- ref_df %>% select(any_of(names(new_df))) %>% all.equal(select(new_df, names(.)), check.attributes = FALSE)
}
if(verbose){
return(res)
}
res %>% isTRUE(.) %>% assert_that(., msg = "Something happened here...")
}
base <- here("data/behav_params/Mukoyama_Replication/")
if(new){
base_new <- here("data/behav_params/Mukoyama_Replication/mukoyama_all/int_data/CPS/R_int/")
# Appending all files with "*intermediate*" pattern
filenames <- list.files(here(base_new), pattern = "*intermediate_201") %>%
paste0(base,"mukoyama_all/int_data/CPS/R_int/", .)
cps_data_new <- tibble()
for(i in 1:length(filenames)){
print(i)
cps_temp <- readRDS(filenames[i])
# This will need to be incorporated into bind_rows if necessary
if("marsta2" %in% names(cps_temp)){
print('Name of married variable changed.')
cps_temp <- cps_temp %>%
rename(married = marsta2)
}else{}
print(paste0("Missing names in new file: ", setdiff(names(cps_data_new), names(cps_temp))))
print(paste0("New names in new file: ", setdiff(names(cps_temp), names(cps_data_new))))
cps_data_new <- rbind.fill(cps_data_new, cps_temp)
}
}
## Download files for additional years
#x <- 201501
x <- 201804
